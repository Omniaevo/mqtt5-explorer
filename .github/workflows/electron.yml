name: electron-builder

on:
  push:
    branches-ignore:
      - "**"
    tags:
      - v[0-9]+.[0-9]+.[0-9]+

env:
  NODE_VERSION: 16.x

jobs:
  build-linux:
    name: Create AppImage for Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - run: npm install
      - run: npm run electron:icons
      - run: npm run electron:build -- --linux -p always
        env:
          GH_TOKEN: ${{ secrets.PUBLISHING_TOKEN }}
      # This step was done by the AppImage build step
      # - run: npm run electron:build -- --linux dir
      - run: tar -czf io.github.Omniaevo.mqtt5-explorer.tar.gz dist_electron/linux-unpacked linux-resources
      - run: sha256sum io.github.Omniaevo.mqtt5-explorer.tar.gz
      - name: Get release
        id: get_release
        uses: bruceadams/get-release@v1.3.2
        env:
          GITHUB_TOKEN: ${{ secrets.PUBLISHING_TOKEN }}
      - name: Upload linux unpacked
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PUBLISHING_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./io.github.Omniaevo.mqtt5-explorer.tar.gz
          asset_name: io.github.Omniaevo.mqtt5-explorer.tar.gz
          asset_content_type: application/x-gzip

  build-macos:
    needs: build-linux
    name: Create DMG for MacOS
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - run: npm install
      - run: npm run electron:icons
      - run: npm run electron:build -- --mac -p always
        env:
          GH_TOKEN: ${{ secrets.PUBLISHING_TOKEN }}

  build-windows:
    needs: build-linux
    name: Create EXE for Windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - run: npm install
      - run: npm run electron:icons
      - run: npm run electron:build -- --win -p always
        env:
          GH_TOKEN: ${{ secrets.PUBLISHING_TOKEN }}
